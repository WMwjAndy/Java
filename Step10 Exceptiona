##try{}catch
//捕获异常，中断。如果程序出现了异常，就能够详细的打印是什么原因导致了异常并且能够做出相应的处理，能够显示详细的Log
package aboutMemory;

public class A {
	public static void Divisor(int num1,int num2){
		try {
			int result=num1/num2;
		} catch (Exception e) {
		 e.printStackTrace();
		}
	}
  public static void main(String[] args){
	Divisor(100, 0);  
  }
    
}


###throw###throws###
//throw 是抛出异常把异常交给上一级处理
//抛出异常：如果程序中出现了异常，没有办法将具体的异常打印出来，不做任何处理
package aboutMemory;


import java.io.FileNotFoundException;

public class Rethrow {
	 public static void f(int num1,int num2) throws Exception{
		 int result=num1/num2;
		 System.out.println("result=:"+result);
		 throw new Exception();
		 
	 }
     public static void main(String[] args) throws Exception{
    	 f(6,0);
     }
}




如果代码是抛出异常的方式，在运行时出现异常，并且打印的Log不明显，
可以改用try{}catch方式来捕获异常，打印出详细的信息
